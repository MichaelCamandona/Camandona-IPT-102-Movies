@model List<MovieViewModel>

@{
    ViewData["Title"] = "Khelflix";
}

<style>
    body {
        background-color: #0c0c0c; /* Dark background */
        color: #ffffff; /* Light text color */
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-image: url('./Content/Images/bg.png');
        background-size: contain;
        background-repeat: repeat;
         margin-bottom: 50px;
    }
    

    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    h1 {
        color: #e50914; /* Netflix red title color */
        font-size: 50px;
        text-align: center;
        margin-bottom: 30px;
        font-family: Poppins;
        border-top: 3px solid white;
        border-bottom: 3px solid white;
        font-weight: 600;
        margin-top: 50px;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: flex-start;
    }

    .movie-card {
        background-color: #000;
        color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        width: calc(25% - 20px);
        transition: transform 0.3s, box-shadow 0.3s, background-color 0.3s; /* Added transitions */
        cursor: pointer;
        overflow: hidden;
    }

        .movie-card:hover {
            transform: scale(1.03); /* Slightly larger on hover */
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.8); /* More pronounced box shadow on hover */
            background-color: #333; /* Darker background on hover */
        }

    .movie-image {
        width: 100%;
        height: 0;
        padding-top: 150%; /* Maintain 16:9 aspect ratio for images */
        background-size: cover;
        background-position: center;
    }

    .movie-title {
        font-size: 24px; /* Larger font size for the movie title */
        font-weight: bold;
        color: #e50914; /* Netflix red for title color */
        margin: 10px 0;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
    }

    .movie-info {
        /* Larger font size for movie info */
        color: #999; /* Light gray for info text color */
        margin: 5px 0;
    }

    .movie-rating {
        color: #e50914; /* Netflix red for rating */
        font-weight: bold;
    }

    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 20px;
    }

    .btn {
        background-color: #e50914;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        margin: 0 5px;
        border-radius: 5px;
        cursor: pointer;
    }

        .btn:hover {
            background-color: #d50c14; /* Darker red on hover */
        }
</style>
<div class="container">
    <h1>@ViewData["Title"]</h1>

    <div class="row" id="movieList">
        @foreach (var movie in Model)
        {
            <div class="movie-card">
                <a href="/movies/getmovie/@movie.Id">
                    <!-- Correct the property name to @movie.Image -->
                    <div class="movie-image" style="background-image: url('@movie.Image')"></div>
                </a>
                <h2 class="movie-title"><a href="/movies/getmovie/@movie.Id">@movie.Name</a></h2>
                <p class="movie-info">
                    <span class="movie-rating">Rating:</span> @movie.Rating<br />
                    <span>Release Year:</span> @movie.ReleaseYear<br />
                    <span>Genre:</span> @movie.Genre<br />
                </p>
            </div>
        }
    </div>
</div>

<!-- Pagination -->

<div class="pagination">
    <button id="previousPageButton" class="btn" disabled>Previous</button>
    <span class="mx-2" id="currentPage">Page 1</span>
    <button id="nextPageButton" class="btn">Next</button>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    // Pagination logic
    var currentPage = 1; // Current page
    var itemsPerPage = 12; // Number of items per page

    // Hide all movie cards and show the first page
    var movieCards = $(".movie-card");
    movieCards.hide();
    showPage(currentPage);

    // Show the specified page
    function showPage(page) {
        var startIndex = (page - 1) * itemsPerPage;
        var endIndex = startIndex + itemsPerPage;
        movieCards.hide();
        movieCards.slice(startIndex, endIndex).show();
        $("#currentPage").text("Page " + page);
        if (page === 1) {
            $("#previousPageButton").prop("disabled", true);
        } else {
            $("#previousPageButton").prop("disabled", false);
        }

        // Check if there are more pages to display
        if (endIndex >= movieCards.length) {
            $("#nextPageButton").prop("disabled", true);
        } else {
            $("#nextPageButton").prop("disabled", false);
        }
    }

    // Next Page button click event
    $("#nextPageButton").click(function () {
        currentPage++;
        showPage(currentPage);
    });

    // Previous Page button click event
    $("#previousPageButton").click(function () {
        currentPage--;
        showPage(currentPage);
    });
</script>